import { TSDocTagDefinition } from './TSDocTagDefinition';
/**
 * Part of the {@link TSDocParserConfiguration} object.
 */
export declare class TSDocParserValidationConfiguration {
    /**
     * Set `ignoreUndefinedTags` to true to silently ignore unrecognized tags,
     * instead of reporting a warning.
     *
     * @remarks
     * Normally the parser will issue errors when it encounters tag names that do not
     * have a corresponding definition in {@link TSDocParserConfiguration.tagDefinitions}.
     * This helps to catch common mistakes such as a misspelled tag.
     *
     * @defaultValue `false`
     */
    ignoreUndefinedTags: boolean;
    /**
     * Set `reportUnsupportedTags` to true to issue a warning for tags that are not
     * supported by your tool.
     *
     * @remarks
     * The TSDoc standard defines may tags.  By default it assumes that if your tool does
     * not implement one of these tags, then it will simply ignore it.  But sometimes this
     * may be misleading for developers. (For example, they might write an `@example` block
     * and then be surprised if it doesn't appear in the documentation output.).
     *
     * For a better experience, you can tell the parser which tags you support, and then it
     * will issue warnings wherever unsupported tags are used.  This is done using
     * {@link TSDocParserConfiguration.setSupportForTag}.  Note that calling that function
     * automatically sets `reportUnsupportedTags` to true.
     *
     * @defaultValue `false`
     */
    reportUnsupportedTags: boolean;
}
/**
 * Configuration for the TSDocParser.
 */
export declare class TSDocParserConfiguration {
    private readonly _tagDefinitions;
    private readonly _tagDefinitionsByName;
    private readonly _supportedTagDefinitions;
    private readonly _validation;
    constructor();
    /**
     * The TSDoc block tag names that will be interpreted as modifier tags.
     */
    readonly tagDefinitions: ReadonlyArray<TSDocTagDefinition>;
    /**
     * Returns the subset of {@link TSDocParserConfiguration.tagDefinitions}
     * that are supported in this configuration.
     *
     * @remarks
     * This property is only used when
     * {@link TSDocParserValidationConfiguration.reportUnsupportedTags} is enabled.
     */
    readonly supportedTagDefinitions: ReadonlyArray<TSDocTagDefinition>;
    /**
     * Enable/disable validation checks performed by the parser.
     */
    readonly validation: TSDocParserValidationConfiguration;
    /**
     * Return the tag that was defined with the specified name, or undefined
     * if not found.
     */
    tryGetTagDefinition(tagName: string): TSDocTagDefinition | undefined;
    /**
     * Return the tag that was defined with the specified name, or undefined
     * if not found.
     */
    tryGetTagDefinitionWithUpperCase(alreadyUpperCaseTagName: string): TSDocTagDefinition | undefined;
    /**
     * Define a new TSDoc tag to be recognized by the TSDocParser, and mark it as unsupported.
     * Use {@link TSDocParserConfiguration.setSupportForTag} to mark it as supported.
     *
     * @remarks
     * If a tag is "defined" this means that the parser recognizes it and understands its syntax.
     * Whereas if a tag is "supported", this means it is defined AND the application implements the tag.
     */
    addTagDefinition(tagDefinition: TSDocTagDefinition): void;
    /**
     * Calls {@link TSDocParserConfiguration.addTagDefinition} for a list of definitions,
     * and optionally marks them as supported.
     * @param tagDefinitions - the definitions to be added
     * @param supported - if specified, calls the {@link TSDocParserConfiguration.setSupportForTag}
     *    method to mark the definitions as supported or unsupported
     */
    addTagDefinitions(tagDefinitions: ReadonlyArray<TSDocTagDefinition>, supported?: boolean | undefined): void;
    /**
     * Returns true if the tag is supported in this configuration.
     */
    isTagSupported(tagDefinition: TSDocTagDefinition): boolean;
    /**
     * Specifies whether the tag definition is supported in this configuration.
     * The parser may issue warnings for unsupported tags.
     *
     * @remarks
     * If a tag is "defined" this means that the parser recognizes it and understands its syntax.
     * Whereas if a tag is "supported", this means it is defined AND the application implements the tag.
     *
     * This function automatically sets {@link TSDocParserValidationConfiguration.reportUnsupportedTags}
     * to true.
     */
    setSupportForTag(tagDefinition: TSDocTagDefinition, supported: boolean): void;
    /**
     * Calls {@link TSDocParserConfiguration.setSupportForTag} for multiple tag definitions.
     */
    setSupportForTags(tagDefinitions: ReadonlyArray<TSDocTagDefinition>, supported: boolean): void;
    private _requireTagToBeDefined;
}
