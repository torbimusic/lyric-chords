"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var constants_1 = require("../constants");
var invalid_string_note_error_1 = require("../errors/invalid-string-note-error");
var NoteAlterations = /** @class */ (function () {
    function NoteAlterations() {
    }
    NoteAlterations.parse = function (alterationString) {
        var alteration = constants_1.NoteAlteration.NATURAL;
        if (alterationString) {
            var reducedLength = alterationString.length >= 2 ? alterationString.substr(0, 2) : alterationString[0];
            if (reducedLength.length === 2 && reducedLength === 'bb') {
                alteration = constants_1.NoteAlteration.DOUBLE_FLAT;
            }
            else {
                alteration = oneLetterAlteration(reducedLength[0]);
            }
        }
        return alteration;
    };
    NoteAlterations.toString = function (alteration) {
        var result = "";
        switch (alteration) {
            case constants_1.NoteAlteration.FLAT:
                result = "b";
                break;
            case constants_1.NoteAlteration.DOUBLE_FLAT:
                result = "bb";
                break;
            case constants_1.NoteAlteration.SHARP:
                result = "#";
                break;
            case constants_1.NoteAlteration.DOUBLE_SHARP:
                result = "x";
                break;
        }
        return result;
    };
    NoteAlterations.value = function (alteration) {
        switch (alteration) {
            case constants_1.NoteAlteration.DOUBLE_FLAT:
                return 0;
            case constants_1.NoteAlteration.FLAT:
                return 1;
            case constants_1.NoteAlteration.NATURAL:
                return 2;
            case constants_1.NoteAlteration.SHARP:
                return 3;
            case constants_1.NoteAlteration.DOUBLE_SHARP:
                return 4;
        }
    };
    return NoteAlterations;
}());
exports.NoteAlterations = NoteAlterations;
function oneLetterAlteration(alt) {
    var alteration;
    switch (alt) {
        case undefined:
        case '':
            alteration = constants_1.NoteAlteration.NATURAL;
            break;
        case '#':
            alteration = constants_1.NoteAlteration.SHARP;
            break;
        case 'b':
            alteration = constants_1.NoteAlteration.FLAT;
            break;
        case 'x':
            alteration = constants_1.NoteAlteration.DOUBLE_SHARP;
            break;
        default:
            throw new invalid_string_note_error_1.InvalidStringNoteError();
    }
    return alteration;
}
//# sourceMappingURL=note-alterations.js.map