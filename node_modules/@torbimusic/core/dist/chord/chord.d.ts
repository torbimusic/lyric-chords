import { SuperiorChord } from './models/superior-chord';
import { BaseChord } from './models/base-chord';
import { Note } from '../note/note';
import { Notation } from '../constants/notation';
import { Interval } from '../interval/interval';
import { ChordBuilder } from './chord.builder';
import { ChordQuality } from '../constants';
export declare class Chord {
    private _base;
    private _additions;
    private _suspended;
    private _superior;
    private _bass;
    private static analyzer;
    constructor(_base: BaseChord, _additions?: number[], _suspended?: number[], _superior?: SuperiorChord, _bass?: Note);
    readonly base: BaseChord;
    readonly additions: number[];
    readonly suspended: number[];
    readonly superior: SuperiorChord;
    readonly bass: Note;
    toString(notation?: Notation): string;
    static parse(chord: string): Chord;
    static simple(note: Note | string, quality: ChordQuality): Chord;
    static triad(tonic: Note, third: Note, fifth: Note): Chord;
    toBuilder(): ChordBuilder;
    traspose(interval: Interval): Chord;
}
